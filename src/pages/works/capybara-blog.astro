---
import Breadcrumb from "@components/Breadcrumb.astro";
import Header from "@components/Header.astro";
import Layout from "@layouts/Layout.astro";
import works from "@data/works.json";
import Button from "@components/Button.astro";

const work = works.find((w) => w.link === "capybara-blog");

if (!work) {
  throw new Error("データが見つかりません");
}
---

<Layout>
  <Header currentPage="works" />
  <div class="container">
    <Breadcrumb currentCategory="works" currentPage={work.name} />
    <div class="flex-wrapper">
      <h1>{work.name}</h1>
      <div>
        <img src={work.thumbnail} alt="{work.name}" />
        <div class="links">
          <p>デモリンク:<a href={work.url} target="_blank">{work.url}</a></p>
          <p>Github:<a href={work.github} target="_blank">{work.github}</a></p>
        </div>
      </div>

      {
        work.sections?.map((section) => (
          <section id={section.title}>
            <h2>{section.title}</h2>
            <div>
              {section.content.map((detail, index) => (
                <div class="detail-item">
                  <h3>
                    {"項目" in detail
                      ? detail.項目
                      : "ステップ" in detail
                        ? detail.ステップ
                        : "機能" in detail
                          ? detail.機能
                          : "Unknown"}
                    ：
                  </h3>
                  {"内容" in detail && detail.内容 ? (
                    Array.isArray(detail.内容) ? (
                      <ul>
                        {detail.内容.map((content, subIndex) => (
                          <li>
                            {typeof content === "string" ? (
                              content
                            ) : "ページ" in content && "url" in content ? (
                              <>
                                <strong>{content.ページ}:</strong>
                                <img
                                  src={content.url}
                                  alt={content.ページ}
                                  style={{ maxWidth: "100%" }}
                                />
                              </>
                            ) : (
                              <span>{JSON.stringify(content)}</span>
                            )}
                          </li>
                        ))}
                      </ul>
                    ) : (
                      <p>{detail.内容}</p>
                    )
                  ) : "説明" in detail && detail.説明 ? (
                    Array.isArray(detail.説明) ? (
                      <ul>
                        {detail.説明.map((desc, subIndex) => (
                          <li>{desc}</li>
                        ))}
                      </ul>
                    ) : (
                      <p>{detail.説明}</p>
                    )
                  ) : "機能" in detail && detail.説明 ? (
                    <p>
                      <strong>{detail.機能}:</strong> {detail.説明}
                    </p>
                  ) : (
                    <p>表示する内容が見つかりません</p>
                  )}
                </div>
              ))}
            </div>
          </section>
        ))
      }

      <div style="margin:0 auto;margin-top: 4rem;">
        <Button link="/works">他の制作物をみる</Button>
      </div>
    </div>
  </div>
</Layout>

<style>
  .flex-wrapper {
    display: flex;
    flex-direction: column;
    gap: 2rem;
  }
  section {
    margin-top: 2rem;
    display: inline-flex;
    flex-direction: column;
    gap: 2rem;
  }
  img {
    width: 100%;
    height: auto;
  }
  .links {
    display: flex;
    flex-direction: column;
    color: var(--color-link);
    font-size: 0.8rem;
    margin-top: 0.3rem;
  }
  .links a {
    margin: 1rem 0;
  }

  .details-flex {
    display: flex;
    flex-wrap: wrap;
    gap: 1rem;
  }

  .detail-item {
    flex: 1 1 calc(50% - 1rem);
    padding: 1rem;
    border: 1px solid #ddd;
    border-radius: 5px;
    background-color: #ebedf3;
  }

  @media (max-width: 768px) {
    .details-grid {
      grid-template-columns: 1fr;
    }

    .details-flex .detail-item {
      flex: 1 1 100%;
    }
  }
</style>
